{"version":3,"sources":["icons/email.svg","icons/github.svg","icons/home.svg","icons/phone.svg","icons/location.svg","icons/react.svg","icons/dotnet.svg","icons/menuButton.svg","icons/whatsapp.svg","icons/javascript.svg","Home.js","Experience.js","About.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Home","react_default","a","createElement","Component","App","react_router_dom","className","class","to","react_router","exact","path","component","Experience","About","href","src","email_icon","alt","phone_icon","home_icon","github_icon","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3548fa8f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/email.b68171a2.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.4e037d58.svg\";","module.exports = __webpack_public_path__ + \"static/media/home.ef1eeea2.svg\";","module.exports = __webpack_public_path__ + \"static/media/phone.e56dcff7.svg\";","module.exports = __webpack_public_path__ + \"static/media/location.a6cc04f5.svg\";","module.exports = __webpack_public_path__ + \"static/media/react.83c2d783.svg\";","module.exports = __webpack_public_path__ + \"static/media/dotnet.cbb72d5b.svg\";","module.exports = __webpack_public_path__ + \"static/media/menuButton.453c0f95.svg\";","module.exports = __webpack_public_path__ + \"static/media/whatsapp.895d1ad5.svg\";","module.exports = __webpack_public_path__ + \"static/media/javascript.ab0a1cc9.svg\";","import React, { Component } from \"react\";\n \nclass Home extends Component {\n  render() {\n    return (\n      <div>\n        <h2>HELLO</h2>\n        <p>Welcome to my page</p>\n        <p>Duis a turpis sed lacus dapibus elementum sed eu lectus.</p>\n      </div>\n    );\n  }\n}\n \nexport default Home;","import React, { Component } from \"react\";\n \nclass Home extends Component {\n  render() {\n    return (\n      <div>\n        <h2>EXPERIENCE</h2>\n        <p>This is my experience</p>\n \n        <p>Duis a turpis sed lacus dapibus elementum sed eu lectus.</p>\n      </div>\n    );\n  }\n}\n \nexport default Home;","import React, { Component } from \"react\";\n \nclass Home extends Component {\n  render() {\n    return (\n      <div>\n        <h2>ABOUT ME</h2>\n        <p>My name is here.</p>\n \n        <p>Duis a turpis sed lacus dapibus elementum sed eu lectus.</p>\n      </div>\n    );\n  }\n}\n \nexport default Home;","import React, { Component } from 'react';\nimport location_icon from './icons/location.svg';\nimport react_icon from './icons/react.svg';\nimport dotnet_icon from './icons/dotnet.svg';\nimport email_icon from './icons/email.svg';\nimport github_icon from './icons/github.svg';\nimport home_icon from './icons/home.svg';\nimport menu_icon from './icons/menuButton.svg';\nimport phone_icon from './icons/phone.svg';\nimport whatsapp_icon from './icons/whatsapp.svg';\nimport javascript_icon from './icons/javascript.svg';\nimport './App.css';\nimport { Route, NavLink, HashRouter} from 'react-router-dom';\nimport Home from \"./Home\";\nimport Experience from \"./Experience\";\nimport About from \"./About\";\n\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter>\n      <div className=\"App\">\n       <div class=\"App-header\">\n            Sean Hettinger <br/>\n            Environmental Scientist/Developer\n          </div>\n          <ul className=\"header\">\n            <li><NavLink to=\"/\">Home</NavLink></li>\n            <li><NavLink to=\"/experience\">Experience</NavLink></li>\n            <li><NavLink to=\"/about\">About</NavLink></li>\n          </ul>\n          <div className=\"content\">\n            <Route exact path=\"/\" component={Home}/>\n            <Route path=\"/experience\" component={Experience}/>\n            <Route path=\"/about\" component={About}/>\n          </div>\n          <div class=\"App-footer\">\n          \n          <a className=\"contact-icon\" href=\"mailto:seanhett@gmail.com\">\n               <img src={email_icon} alt=\"email\" /> \n          </a>\n          <br/>\n          <a className=\"contact-icon\">\n               <img src={phone_icon} alt=\"phone\" /> \n          </a>\n          <br/>\n          <a className=\"contact-icon\" href=\"https://www.google.com/maps/place/5929+Saintsbury+Dr+%2335,+The+Colony,+TX+75056/@33.0568555,-96.8512725,17z/data=!3m1!4b1!4m5!3m4!1s0x864c24ba55107b6d:0x38bd46ffcff40825!8m2!3d33.056851!4d-96.8490838\">\n               <img src={home_icon} alt=\"address\" />\n          </a>\n          <br/>\n          <a className=\"contact-icon\" href=\"https://seanhett.github.com\">\n               <img src={github_icon} alt=\"github\" />\n          </a>\n          <br/>\n          </div>\n  \n        </div>\n        </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}